Task-02: ReplicationController in Kubernetes
=============================================


The only thing standing between you and outrageous success is continuous progress.

– Dan Waldschmidt

Learning never exhausts the mind.

– Leonardo da Vinci


Task:
-------
The Nautilus DevOps team wants to create a ReplicationController to deploy several pods. They are going to deploy applications on these pods, these applications need highly available infrastructure. Below you can find exact details, create the ReplicationController accordingly.

    Create a ReplicationController using nginx image, preferably with latest tag, and name it as nginx-replicationcontroller.

    Labels app should be nginx_app, and labels type should be front-end. The container should be named as nginx-container and also make sure replica counts are 3.

All pods should be running state after deployment.

Note: The kubectl utility on jump_host has been configured to work with the kubernetes cluster.


Resolution:
------------

1- Create a replica.yml file 
 
   - vi /tmp/replica.yml


apiVersion: v1
kind: ReplicationController
metadata: 
  name: nginx-replicationcontroller
  labels: 
    app: nginx_app
    type: front-end
spec:
  replicas: 3
  selector: 
    app: nginx_app
  template:
    metadata:
      name: nginx_pod
      labels:
        app: nginx_app
        type: front-end

    spec:
      containers:  
        - name: nginx-container
          image: nginx:latest
          ports:
            - containerPort: 80

2- Create RC

 - kubectl create -f replica.yml

 - kubectl get pods

3- Login inside the pod

 - kubectl exec <containername> -- curl http://localhost


