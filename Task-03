Task-03: manage secrets in kubernetes
=====================================

Study hard what interests you the most in the most undisciplined, irreverent and original manner possible.

– Richard P. Feynman

The best way to guarantee a loss is to quit.

– Morgan Freeman

Task:
-----
The Nautilus DevOps team is working to deploy some tools in Kubernetes cluster. Some of the tools are licence based so that licence information needs to be stored securely within Kubernetes cluster. Therefore, the team wants to utilize Kubernetes secrets to store those secrets. Below you can find more details about the requirements:

    We already have a secret key file blog.txt under /opt location on jump host. Create a generic secret named blog, it should contain the password/license-number present in blog.txt file.

    Also create a pod named secret-nautilus.

    Configure pod's spec as container name should be secret-container-nautilus, image should be centos preferably with latest tag (remember to mention the tag with image). Use sleep command for container so that it remains in running state. Consume the created secret and mount it under /opt/games within the container.

    To verify you can exec into the container secret-container-nautilus, to check the secret key under the mounted path /opt/games. Before hitting the Check button please make sure pod/pods are in running state, also validation can take some time to complete so keep patience.

Note: The kubectl utility on jump_host has been configured to work with the kubernetes cluster.

Resolution:
-----------

kubectl create secret generic blog --from-file=/opt/blog.txt

cat /opt/blog.txt

vi /tmp/secret.yml

apiVersion: v1
kind: Pod
metadata:
  name: secret-devops
  labels: 
    name: devapp
spec:
  volumes:
    - name: secret-volume-devops
      secret:
        secretName: blog
  containers:
  - name: secret-container-devops
    image: ubuntu:latest
    command: ["/bin/bash", "-c", "sleep 10000"]
    volumeMounts:
      - name: secret-volume-devops
        mountPath: /opt/games
        readOnly: true
  
  
- kubectl create -f /tmp/secret.yml

- kubectl exec <podname> -- cat /opt/games/blog.txt

    kubectl exec secret-devops -- cat /opt/games/blog.txt